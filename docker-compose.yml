version: '3.8'

services:
  app:
    build:
      context: .
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    volumes:
      - .:/var/www/html
      - vendor:/var/www/html/vendor
      - node_modules:/var/www/html/node_modules
    expose:
      - "9000"
    depends_on:
      db:
        condition: service_healthy

  web:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      app:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  db:
    image: postgres:16
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d app"]
      interval: 10s
      timeout: 5s
      retries: 5

  vite:
    image: node:lts-alpine
    working_dir: /var/www/html
    command: npm run dev
    volumes:
      - .:/var/www/html
      - node_modules:/var/www/html/node_modules
    ports:
      - "5173:5173"
    environment:
      HMR_HOST: ${HMR_HOST:-localhost}
    depends_on:
      - app

volumes:
  db-data:
  vendor:
  node_modules:
